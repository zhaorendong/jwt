package security.org.jwt.mapping;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

import security.org.jwt.domain.Jwt;
@Mapper
public interface JwtMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jwt
     *
     * @mbggenerated
     */
    @Delete({
        "delete from jwt",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jwt
     *
     * @mbggenerated
     */
    @Insert({
        "insert into jwt (ID, TENANT_ID, ",
        "OWNER, PRIVATEKEY, PUBLICKEY, ",
        "JWK,JSON_SPEC, NOTE)",
        "values (#{id,jdbcType=INTEGER}, #{tenantId,jdbcType=INTEGER}, ",
        "#{owner,jdbcType=VARCHAR}, #{privateKey,jdbcType=LONGVARCHAR}, #{publicKey,jdbcType=LONGVARCHAR}, ",
        "#{Jwk,jdbcType=LONGVARCHAR}, #{jsonSpec,jdbcType=LONGVARCHAR}, #{note,jdbcType=LONGVARCHAR})"
    })
    @SelectKey(before = false, keyProperty = "id", resultType = Integer.class, statement = { "SELECT LAST_INSERT_ID() AS id" })
    int insert(Jwt record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jwt
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, TENANT_ID, OWNER, PRIVATEKEY, PUBLICKEY, JWK, JSON_SPEC, NOTE, ",
        "LAST_UPDATED",
        "from jwt",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="TENANT_ID", property="tenantId", jdbcType=JdbcType.INTEGER),
        @Result(column="OWNER", property="owner", jdbcType=JdbcType.VARCHAR),
        @Result(column="PRIVATEKEY", property="privateKey", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="PUBLICKEY", property="publicKey", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="JWK", property="Jwk", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="JSON_SPEC", property="jsonSpec", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="NOTE", property="note", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP),
    })
    Jwt selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jwt
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, TENANT_ID, OWNER, PRIVATEKEY, PUBLICKEY, JWK, JSON_SPEC, NOTE, ",
        "LAST_UPDATED",
        "from jwt"
    })
    @Results({
    	 @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
         @Result(column="TENANT_ID", property="tenantId", jdbcType=JdbcType.INTEGER),
         @Result(column="OWNER", property="owner", jdbcType=JdbcType.VARCHAR),
         @Result(column="PRIVATEKEY", property="privateKey", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="PUBLICKEY", property="publicKey", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="JWK", property="Jwk", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="JSON_SPEC", property="jsonSpec", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="NOTE", property="note", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP),
    })
    List<Jwt> selectAll();
    
    @Select({
        "select",
        "ID, TENANT_ID, OWNER, PRIVATEKEY, PUBLICKEY, JWK, JSON_SPEC, NOTE, ",
        "LAST_UPDATED",
        "from jwt",
        "where TENANT_ID = #{tenantId,jdbcType=INTEGER}"
    })
    @Results({
    	 @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
         @Result(column="TENANT_ID", property="tenantId", jdbcType=JdbcType.INTEGER),
         @Result(column="OWNER", property="owner", jdbcType=JdbcType.VARCHAR),
         @Result(column="PRIVATEKEY", property="privateKey", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="PUBLICKEY", property="publicKey", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="JWK", property="Jwk", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="JSON_SPEC", property="jsonSpec", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="NOTE", property="note", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP),
    })
    Jwt selectByTenant(int tenantId);

    @Select({
        "select",
        "ID, TENANT_ID, OWNER, PRIVATEKEY, PUBLICKEY, JWK, JSON_SPEC, NOTE, ",
        "LAST_UPDATED",
        "from jwt",
        "where TENANT_ID = #{tenantId,jdbcType=INTEGER} and OWNER = #{owner,jdbcType=VARCHAR}"
    })
    @Results({
    	 @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
         @Result(column="TENANT_ID", property="tenantId", jdbcType=JdbcType.INTEGER),
         @Result(column="OWNER", property="owner", jdbcType=JdbcType.VARCHAR),
         @Result(column="PRIVATEKEY", property="privateKey", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="PUBLICKEY", property="publicKey", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="JWK", property="Jwk", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="JSON_SPEC", property="jsonSpec", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="NOTE", property="note", jdbcType=JdbcType.LONGVARCHAR),
         @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP),
    })
    Jwt selectByTenantIdAndOwner(@Param("tenantId")Integer tenantId, @Param("owner")String owner);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jwt
     *
     * @mbggenerated
     */
    @Update({
        "update jwt",
        "set TENANT_ID = #{tenantId,jdbcType=INTEGER},",
          "OWNER = #{owner,jdbcType=VARCHAR},",
          "PRIVATEKEY = #{privateKey,jdbcType=LONGVARCHAR},",
          "PUBLICKEY = #{publicKey,jdbcType=LONGVARCHAR},",
          "JWK = #{Jwk,jdbcType=LONGVARCHAR},",
          "JSON_SPEC = #{jsonSpec,jdbcType=LONGVARCHAR},",
          "NOTE = #{note,jdbcType=LONGVARCHAR} ",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Jwt record);
    
}